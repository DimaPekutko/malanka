;	this assembly file generated by compiler
	extern cos
	extern sin
	extern glTranslated
	extern glEnd
	extern glEnable
	extern glMatrixMode
	extern glRotated
	extern glVertex3d
	extern glLoadIdentity
	extern glBegin
	extern glViewport
	extern glutReshapeFunc
	extern glutCreateWindow
	extern glutWarpPointer
	extern glutFullScreen
	extern glutSetCursor
	extern glutMainLoop
	extern glutPostRedisplay
	extern glutInitDisplayMode
	extern glutInit
	extern glutInitWindowSize
	extern glutTimerFunc
	extern glutKeyboardUpFunc
	extern glutPassiveMotionFunc
	extern glutSwapBuffers
	extern glutKeyboardFunc
	extern glutDisplayFunc
	extern glutSolidCube
	extern glColor3d
	extern glDepthFunc
	extern glClear
	extern gluPerspective
	extern __bootstrap
	extern __esModule
	extern __ARGC__
	extern __ARGV__
	extern char_to_int
	extern int_to_doub
segment .text
global _start
_start:
	call __bootstrap
BINOP_START__60ruD___0:
	push rbx
	mov rax, 50
	mov rbx, rax
	mov rax, 16
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fmul
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__pS1UY___1:
	mov [WIN_WIDTH], rax
BINOP_START__UGejd___2:
	push rbx
	mov rax, 50
	mov rbx, rax
	mov rax, 9
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fmul
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__WrVgl___3:
	mov [WIN_HEIGHT], rax
	mov rax, str_06QaRXjnVJ
	mov [WIN_TITLE], rax
	mov rax, 60
	mov [FPS], rax
BINOP_START__eptuZ___4:
	push rbx
	mov rax, __float64__(180.0)
	mov rbx, rax
	mov rax, __float64__(3.14)
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Ph0q1___5:
	mov [TO_RADIANS], rax
	mov rax, __float64__(0.0)
	mov [pitch], rax
	mov rax, __float64__(0.0)
	mov [yaw], rax
	mov rax, __float64__(0.0)
	mov [cam_x], rax
	mov rax, __float64__(0.0)
	mov [cam_z], rax
	mov rax, 0
	mov [MOVE_FORWARD], rax
	mov rax, 0
	mov [MOVE_BACKWARD], rax
	mov rax, 0
	mov [MOVE_LEFT], rax
	mov rax, 0
	mov [MOVE_RIGHT], rax
	mov rax, 101
	mov [GLUT_CURSOR_NONE], rax
	mov rax, 2929
	mov [GL_DEPTH_TEST], rax
	mov rax, 515
	mov [GL_LEQUAL], rax
	mov rax, 5888
	mov [GL_MODELVIEW], rax
	mov rax, 5889
	mov [GL_PROJECTION], rax
	mov rax, 16640
	mov [CLEAR_MODE], rax
	mov rax, 10
	mov [DISPLAY_MODE], rax
	; ------ funccall -> main
	sub rsp, 16
	mov rax, 0
	call main
	add rsp, 16
	; ------ funccall end -> main
	; exit
	mov rax, 60
	xor rdi, rdi
	syscall
camera:
	push rbp
	mov rbp, rsp
COND_START__ht55Q___6:
BINOP_START__AGuLM___10:
	push rbx
	mov rax, 1
	mov rbx, rax
	mov rax, [MOVE_FORWARD]
COMP_START__QhfiC___11:
	cmp rax, rbx
	je COMP_RIGHT__E7Rtw___12
	xor rax, rax
	jmp COMP_END__2eLgn___13
COMP_RIGHT__E7Rtw___12:
	mov rax, 1
COMP_END__2eLgn___13:
	pop rbx
BINOP_END__c0UCV___14:
	test rax, rax
	jz IF_END__lfidL___8
IF_START__l49SD___7:
BINOP_START__B3SQR___15:
	push rbx
BINOP_START__LXilZ___16:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> cos
BINOP_START__JnhWM___17:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__w3MUW___18:
	push rbx
	mov rax, __float64__(90.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__9hKXq___19:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__E95Yb___20:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call cos
	add rsp, 16
	; ------ funccall end -> cos
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__0DXSz___21:
	mov rbx, rax
	mov rax, [cam_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__NvNEk___22:
	mov [cam_x], rax
BINOP_START__LmZto___23:
	push rbx
BINOP_START__1Gxi6___24:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> sin
BINOP_START__TzM4v___25:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__VAZnc___26:
	push rbx
	mov rax, __float64__(90.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__8MMCy___27:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__ajgMZ___28:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call sin
	add rsp, 16
	; ------ funccall end -> sin
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Xsk8s___29:
	mov rbx, rax
	mov rax, [cam_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__j23Lf___30:
	mov [cam_z], rax
	jmp COND_END__URGuc___9
IF_END__lfidL___8:
COND_END__URGuc___9:
COND_START__HiiHu___31:
BINOP_START__AJjpx___35:
	push rbx
	mov rax, 1
	mov rbx, rax
	mov rax, [MOVE_BACKWARD]
COMP_START__LfKYb___36:
	cmp rax, rbx
	je COMP_RIGHT__CtbgA___37
	xor rax, rax
	jmp COMP_END__kqzTf___38
COMP_RIGHT__CtbgA___37:
	mov rax, 1
COMP_END__kqzTf___38:
	pop rbx
BINOP_END__6XKDI___39:
	test rax, rax
	jz IF_END__PdzhP___33
IF_START__yKEA5___32:
BINOP_START__GAJnv___40:
	push rbx
BINOP_START__IrJkQ___41:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> cos
BINOP_START__Wtp59___42:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__oO4Fx___43:
	push rbx
	mov rax, __float64__(270.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__OCMRT___44:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__3HaKg___45:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call cos
	add rsp, 16
	; ------ funccall end -> cos
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__lqFPe___46:
	mov rbx, rax
	mov rax, [cam_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__3SVlv___47:
	mov [cam_x], rax
BINOP_START__cDybB___48:
	push rbx
BINOP_START__1ZZid___49:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> sin
BINOP_START__SDTUK___50:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__cdGfK___51:
	push rbx
	mov rax, __float64__(270.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__4hm5F___52:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__NklfT___53:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call sin
	add rsp, 16
	; ------ funccall end -> sin
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__asyQm___54:
	mov rbx, rax
	mov rax, [cam_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__hHk1j___55:
	mov [cam_z], rax
	jmp COND_END__lxXas___34
IF_END__PdzhP___33:
COND_END__lxXas___34:
COND_START__9xMMI___56:
BINOP_START__Z3BGt___60:
	push rbx
	mov rax, 1
	mov rbx, rax
	mov rax, [MOVE_LEFT]
COMP_START__CHawM___61:
	cmp rax, rbx
	je COMP_RIGHT__xUjGR___62
	xor rax, rax
	jmp COMP_END__xn2QD___63
COMP_RIGHT__xUjGR___62:
	mov rax, 1
COMP_END__xn2QD___63:
	pop rbx
BINOP_END__EkB3a___64:
	test rax, rax
	jz IF_END__Qvcip___58
IF_START__jZdNl___57:
BINOP_START__lvP59___65:
	push rbx
BINOP_START__eI6Oa___66:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> cos
BINOP_START__TmZai___67:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__VVswd___68:
	push rbx
	mov rax, __float64__(180.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__e6tgf___69:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__P2dAJ___70:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call cos
	add rsp, 16
	; ------ funccall end -> cos
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__xQpbQ___71:
	mov rbx, rax
	mov rax, [cam_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__psCKi___72:
	mov [cam_x], rax
BINOP_START__wuEDo___73:
	push rbx
BINOP_START__AbQMN___74:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> sin
BINOP_START__Somad___75:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
BINOP_START__lLj5w___76:
	push rbx
	mov rax, __float64__(180.0)
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__mz1H9___77:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__I8fmT___78:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call sin
	add rsp, 16
	; ------ funccall end -> sin
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__hwyXZ___79:
	mov rbx, rax
	mov rax, [cam_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__7iBvK___80:
	mov [cam_z], rax
	jmp COND_END__kaXsP___59
IF_END__Qvcip___58:
COND_END__kaXsP___59:
COND_START__6XVxp___81:
BINOP_START__HVan1___85:
	push rbx
	mov rax, 1
	mov rbx, rax
	mov rax, [MOVE_RIGHT]
COMP_START__S02kP___86:
	cmp rax, rbx
	je COMP_RIGHT__xAKkr___87
	xor rax, rax
	jmp COMP_END__ddvKa___88
COMP_RIGHT__xAKkr___87:
	mov rax, 1
COMP_END__ddvKa___88:
	pop rbx
BINOP_END__68gPt___89:
	test rax, rax
	jz IF_END__j3KPV___83
IF_START__LPcE8___82:
BINOP_START__efOiI___90:
	push rbx
BINOP_START__QB7y3___91:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> cos
BINOP_START__Pj24z___92:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__MRXZR___93:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call cos
	add rsp, 16
	; ------ funccall end -> cos
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__4er2S___94:
	mov rbx, rax
	mov rax, [cam_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__QyC7R___95:
	mov [cam_x], rax
BINOP_START__RfGpd___96:
	push rbx
BINOP_START__b2hmE___97:
	push rbx
	mov rax, __float64__(5.0)
	mov rbx, rax
	; ------ funccall -> sin
BINOP_START__PdC26___98:
	push rbx
	mov rax, [TO_RADIANS]
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__CrPys___99:
	movq xmm0, rax
	sub rsp, 16
	mov rax, 1
	call sin
	add rsp, 16
	; ------ funccall end -> sin
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Yu9r6___100:
	mov rbx, rax
	mov rax, [cam_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__dwARf___101:
	mov [cam_z], rax
	jmp COND_END__ijxBm___84
IF_END__j3KPV___83:
COND_END__ijxBm___84:
COND_START__oy84z___102:
BINOP_START__yGZNx___106:
	push rbx
	mov rax, __float64__(70.0)
	mov rbx, rax
	mov rax, [pitch]
COMP_START__A8gdZ___107:
	cmp rax, rbx
	jge COMP_RIGHT__NteWF___108
	xor rax, rax
	jmp COMP_END__dH8jo___109
COMP_RIGHT__NteWF___108:
	mov rax, 1
COMP_END__dH8jo___109:
	pop rbx
BINOP_END__f8aa9___110:
	test rax, rax
	jz IF_END__u1Fn3___104
IF_START__3LTbF___103:
	mov rax, __float64__(70.0)
	mov [pitch], rax
	jmp COND_END__vRibV___105
IF_END__u1Fn3___104:
COND_END__vRibV___105:
	; ------ funccall -> glRotated
	mov rax, [pitch]
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm0, rax
	mov rax, __float64__(1.0)
	movq xmm1, rax
	mov rax, __float64__(0.0)
	movq xmm2, rax
	mov rax, __float64__(0.0)
	movq xmm3, rax
	sub rsp, 16
	mov rax, 4
	call glRotated
	add rsp, 16
	; ------ funccall end -> glRotated
	; ------ funccall -> glRotated
	mov rax, [yaw]
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm0, rax
	mov rax, __float64__(0.0)
	movq xmm1, rax
	mov rax, __float64__(1.0)
	movq xmm2, rax
	mov rax, __float64__(0.0)
	movq xmm3, rax
	sub rsp, 16
	mov rax, 4
	call glRotated
	add rsp, 16
	; ------ funccall end -> glRotated
	; ------ funccall -> glTranslated
	mov rax, [cam_x]
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm0, rax
	mov rax, __float64__(0.0)
	movq xmm1, rax
	mov rax, [cam_z]
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glTranslated
	add rsp, 16
	; ------ funccall end -> glTranslated
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
draw:
	push rbp
	mov rbp, rsp
	; ------ funccall -> glBegin
	mov rax, 7
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glBegin
	add rsp, 16
	; ------ funccall end -> glBegin
	mov rax, __float64__(5.0)
	push 0
	push rax
	mov rax, __float64__(1.0)
	push 0
	push rax
	mov rax, __float64__(30.0)
	push 0
	push rax
	mov rax, __float64__(1.0)
	push 0
	push rax
FOR_START__D3hAp___111:
BINOP_START__BQSFg___113:
	push rbx
	mov rax, [rbp-48]
	mov rbx, rax
	mov rax, [rbp-64]
COMP_START__CNy2Q___114:
	cmp rax, rbx
	jl COMP_RIGHT__7F8m5___115
	xor rax, rax
	jmp COMP_END__S8G8Y___116
COMP_RIGHT__7F8m5___115:
	mov rax, 1
COMP_END__S8G8Y___116:
	pop rbx
BINOP_END__2TeT9___117:
	test rax, rax
	jz FOR_END__75CDn___112
BINOP_START__Tffl2___118:
	push rbx
BINOP_START__x1Qmq___119:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [rbp-64]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__7ogrk___120:
	mov rbx, rax
BINOP_START__GOE9x___121:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
BINOP_START__hYcDr___122:
	push rbx
	mov rax, __float64__(2.0)
	mov rbx, rax
	mov rax, [rbp-48]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__lf83T___123:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__hW23Z___124:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Xg72H___125:
	mov [_x], rax
	mov rax, __float64__(1.0)
	mov [z], rax
FOR_START__lVisw___126:
BINOP_START__zdfBL___128:
	push rbx
	mov rax, [rbp-48]
	mov rbx, rax
	mov rax, [z]
COMP_START__Ji0wO___129:
	cmp rax, rbx
	jl COMP_RIGHT__Bbcum___130
	xor rax, rax
	jmp COMP_END__ItS1e___131
COMP_RIGHT__Bbcum___130:
	mov rax, 1
COMP_END__ItS1e___131:
	pop rbx
BINOP_END__NaoYx___132:
	test rax, rax
	jz FOR_END__61HFo___127
BINOP_START__02iGC___133:
	push rbx
BINOP_START__CA9Xa___134:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__bkGni___135:
	mov rbx, rax
BINOP_START__3OhEr___136:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
BINOP_START__XTFoj___137:
	push rbx
	mov rax, __float64__(1.0)
	mov rbx, rax
BINOP_START__pg08C___138:
	push rbx
	mov rax, __float64__(2.0)
	mov rbx, rax
	mov rax, [rbp-48]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__wV0Za___139:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__YI2C3___140:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fmul
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__M3zWe___141:
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__XysIi___142:
	mov [_z], rax
	; ------ funccall -> glColor3d
	mov rax, [rbp-32]
	movq xmm0, rax
	mov rax, [rbp-32]
	movq xmm1, rax
	mov rax, [rbp-32]
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glColor3d
	add rsp, 16
	; ------ funccall end -> glColor3d
	; ------ funccall -> glVertex3d
	mov rax, [_x]
	movq xmm0, rax
	mov rax, __float64__(5.0)
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm1, rax
	mov rax, [_z]
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glVertex3d
	add rsp, 16
	; ------ funccall end -> glVertex3d
	; ------ funccall -> glVertex3d
BINOP_START__8l7T8___143:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__jaPPG___144:
	movq xmm0, rax
	mov rax, __float64__(5.0)
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm1, rax
	mov rax, [_z]
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glVertex3d
	add rsp, 16
	; ------ funccall end -> glVertex3d
	; ------ funccall -> glVertex3d
BINOP_START__9WhDK___145:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [_x]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__2PVLV___146:
	movq xmm0, rax
	mov rax, __float64__(5.0)
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm1, rax
BINOP_START__9tKGe___147:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__g9atL___148:
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glVertex3d
	add rsp, 16
	; ------ funccall end -> glVertex3d
	; ------ funccall -> glVertex3d
	mov rax, [_x]
	movq xmm0, rax
	mov rax, __float64__(5.0)
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm1, rax
BINOP_START__sKO5e___149:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
	mov rax, [_z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Grg1P___150:
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glVertex3d
	add rsp, 16
	; ------ funccall end -> glVertex3d
COND_START__BJ9Ns___151:
BINOP_START__bpZ1R___155:
	push rbx
	mov rax, __float64__(1.0)
	mov rbx, rax
	mov rax, [rbp-32]
COMP_START__wKK5N___156:
	cmp rax, rbx
	je COMP_RIGHT__1VZOv___157
	xor rax, rax
	jmp COMP_END__5gpNu___158
COMP_RIGHT__1VZOv___157:
	mov rax, 1
COMP_END__5gpNu___158:
	pop rbx
BINOP_END__UEJmp___159:
	test rax, rax
	jz IF_END__sV8lh___153
IF_START__Z8m5c___152:
	mov rax, __float64__(0.0)
	mov [rbp-32], rax
	jmp COND_END__aU7YT___154
IF_END__sV8lh___153:
COND_START__oZlEh___160:
	mov rax, 1
	test rax, rax
	jz IF_END__bDYYn___162
IF_START__oEm3U___161:
	mov rax, __float64__(1.0)
	mov [rbp-32], rax
	jmp COND_END__aU7YT___154
IF_END__bDYYn___162:
COND_END__aU7YT___154:
BINOP_START__ugayo___163:
	push rbx
	mov rax, __float64__(1.0)
	mov rbx, rax
	mov rax, [z]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__FQudK___164:
	mov [z], rax
	jmp FOR_START__lVisw___126
FOR_END__61HFo___127:
BINOP_START__rGKYg___165:
	push rbx
	mov rax, __float64__(1.0)
	mov rbx, rax
	mov rax, [rbp-64]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__BvZBn___166:
	mov [rbp-64], rax
	jmp FOR_START__D3hAp___111
FOR_END__75CDn___112:
	; ------ funccall -> glEnd
	sub rsp, 16
	mov rax, 0
	call glEnd
	add rsp, 16
	; ------ funccall end -> glEnd
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_display:
	push rbp
	mov rbp, rsp
	; ------ funccall -> glClear
	mov rax, [CLEAR_MODE]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glClear
	add rsp, 16
	; ------ funccall end -> glClear
	; ------ funccall -> glLoadIdentity
	sub rsp, 16
	mov rax, 0
	call glLoadIdentity
	add rsp, 16
	; ------ funccall end -> glLoadIdentity
	; ------ funccall -> camera
	sub rsp, 16
	mov rax, 0
	call camera
	add rsp, 16
	; ------ funccall end -> camera
	; ------ funccall -> glTranslated
	mov rax, __float64__(0.0)
	movq xmm0, rax
	mov rax, __float64__(0.0)
	movq xmm1, rax
	mov rax, __float64__(10.0)
	push rbx
	mov rbx, rax
	mov rax, 0
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fsub
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glTranslated
	add rsp, 16
	; ------ funccall end -> glTranslated
	; ------ funccall -> glColor3d
	mov rax, __float64__(0.3)
	movq xmm0, rax
	mov rax, __float64__(1.0)
	movq xmm1, rax
	mov rax, __float64__(0.3)
	movq xmm2, rax
	sub rsp, 16
	mov rax, 3
	call glColor3d
	add rsp, 16
	; ------ funccall end -> glColor3d
	; ------ funccall -> glutSolidCube
	mov rax, 2
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutSolidCube
	add rsp, 16
	; ------ funccall end -> glutSolidCube
	; ------ funccall -> draw
	sub rsp, 16
	mov rax, 0
	call draw
	add rsp, 16
	; ------ funccall end -> draw
	; ------ funccall -> glutSwapBuffers
	sub rsp, 16
	mov rax, 0
	call glutSwapBuffers
	add rsp, 16
	; ------ funccall end -> glutSwapBuffers
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_timer:
	push rbp
	mov rbp, rsp
	; ------ funccall -> glutPostRedisplay
	sub rsp, 16
	mov rax, 0
	call glutPostRedisplay
	add rsp, 16
	; ------ funccall end -> glutPostRedisplay
	; ------ funccall -> glutWarpPointer
BINOP_START__zYe3E___167:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_WIDTH]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__SXF9A___168:
	mov rdi, rax
BINOP_START__1jDN3___169:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_HEIGHT]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__QrF5t___170:
	mov rsi, rax
	sub rsp, 16
	mov rax, 0
	call glutWarpPointer
	add rsp, 16
	; ------ funccall end -> glutWarpPointer
	; ------ funccall -> glutTimerFunc
BINOP_START__FCYs8___171:
	push rbx
	mov rax, [FPS]
	mov rbx, rax
	mov rax, 1000
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__GHYFR___172:
	mov rdi, rax
	lea rax, [on_timer]
	mov rsi, rax
	mov rax, 0
	mov rdx, rax
	sub rsp, 16
	mov rax, 0
	call glutTimerFunc
	add rsp, 16
	; ------ funccall end -> glutTimerFunc
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_reshape:
	push rbp
	mov rbp, rsp
	push rdi
	push rsi
	; ------ funccall -> glViewport
	mov rax, 0
	mov rdi, rax
	mov rax, 0
	mov rsi, rax
	mov rax, [rbp-8]
	mov rdx, rax
	mov rax, [rbp-16]
	mov rcx, rax
	sub rsp, 16
	mov rax, 0
	call glViewport
	add rsp, 16
	; ------ funccall end -> glViewport
	; ------ funccall -> glMatrixMode
	mov rax, [GL_PROJECTION]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glMatrixMode
	add rsp, 16
	; ------ funccall end -> glMatrixMode
	; ------ funccall -> glLoadIdentity
	sub rsp, 16
	mov rax, 0
	call glLoadIdentity
	add rsp, 16
	; ------ funccall end -> glLoadIdentity
	; ------ funccall -> gluPerspective
	mov rax, __float64__(60.0)
	movq xmm0, rax
BINOP_START__kGDO2___173:
	push rbx
	mov rax, __float64__(9.0)
	mov rbx, rax
	mov rax, __float64__(16.0)
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__nXkKu___174:
	movq xmm1, rax
	mov rax, __float64__(1.0)
	movq xmm2, rax
	mov rax, __float64__(75.0)
	movq xmm3, rax
	sub rsp, 16
	mov rax, 4
	call gluPerspective
	add rsp, 16
	; ------ funccall end -> gluPerspective
	; ------ funccall -> glMatrixMode
	mov rax, [GL_MODELVIEW]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glMatrixMode
	add rsp, 16
	; ------ funccall end -> glMatrixMode
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_passive_motion:
	push rbp
	mov rbp, rsp
	push rdi
	push rsi
	; ------ funccall -> int_to_doub
BINOP_START__1VLLE___175:
	push rbx
	mov rax, [rbp-8]
	mov rbx, rax
BINOP_START__CLxkf___176:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_WIDTH]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__eqkNj___177:
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fsub
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Pc2p2___178:
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call int_to_doub
	add rsp, 16
	; ------ funccall end -> int_to_doub
	push 0
	push rax
	; ------ funccall -> int_to_doub
BINOP_START__lKBIV___179:
	push rbx
	mov rax, [rbp-16]
	mov rbx, rax
BINOP_START__iMP1B___180:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_HEIGHT]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__3kGOr___181:
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fsub
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__XPLuO___182:
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call int_to_doub
	add rsp, 16
	; ------ funccall end -> int_to_doub
	push 0
	push rax
BINOP_START__wRJFf___183:
	push rbx
BINOP_START__M41q1___184:
	push rbx
	mov rax, __float64__(10.0)
	mov rbx, rax
	mov rax, [rbp-32]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__vjqIj___185:
	mov rbx, rax
	mov rax, [yaw]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__LEcXE___186:
	mov [yaw], rax
BINOP_START__Sh0w3___187:
	push rbx
BINOP_START__Axczq___188:
	push rbx
	mov rax, __float64__(10.0)
	mov rbx, rax
	mov rax, [rbp-48]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fdiv
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__jfxD4___189:
	mov rbx, rax
	mov rax, [pitch]
	mov [buffer_zcbmB], rax
	fld qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fld qword [buffer_zcbmB]
	fadd
	fstp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__0Di6n___190:
	mov [pitch], rax
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_keyboard_down:
	push rbp
	mov rbp, rsp
	push rdi
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
on_keyboard_up:
	push rbp
	mov rbp, rsp
	push rdi
	push rsi
	push rdx
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
init:
	push rbp
	mov rbp, rsp
	; ------ funccall -> glutSetCursor
	mov rax, [GLUT_CURSOR_NONE]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutSetCursor
	add rsp, 16
	; ------ funccall end -> glutSetCursor
	; ------ funccall -> glEnable
	mov rax, [GL_DEPTH_TEST]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glEnable
	add rsp, 16
	; ------ funccall end -> glEnable
	; ------ funccall -> glDepthFunc
	mov rax, [GL_LEQUAL]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glDepthFunc
	add rsp, 16
	; ------ funccall end -> glDepthFunc
	; ------ funccall -> glutWarpPointer
BINOP_START__57ekb___191:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_WIDTH]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__Nx1Nz___192:
	mov rdi, rax
BINOP_START__kxCCi___193:
	push rbx
	mov rax, 2
	mov rbx, rax
	mov rax, [WIN_HEIGHT]
	mov [buffer_zcbmB], rax
	fild qword [buffer_zcbmB]
	mov [buffer_zcbmB], rbx
	fild qword [buffer_zcbmB]
	fdiv
	fistp qword [buffer_zcbmB]
	mov rax, [buffer_zcbmB]
	pop rbx
BINOP_END__znini___194:
	mov rsi, rax
	sub rsp, 16
	mov rax, 0
	call glutWarpPointer
	add rsp, 16
	; ------ funccall end -> glutWarpPointer
	; ------ funccall -> glutFullScreen
	sub rsp, 16
	mov rax, 0
	call glutFullScreen
	add rsp, 16
	; ------ funccall end -> glutFullScreen
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
main:
	push rbp
	mov rbp, rsp
	; ------ funccall -> glutInit
	mov rax, [__ARGC__]
	mov rdi, rax
	mov rax, [__ARGV__]
	mov rsi, rax
	sub rsp, 16
	mov rax, 0
	call glutInit
	add rsp, 16
	; ------ funccall end -> glutInit
	; ------ funccall -> glutInitDisplayMode
	mov rax, [DISPLAY_MODE]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutInitDisplayMode
	add rsp, 16
	; ------ funccall end -> glutInitDisplayMode
	; ------ funccall -> glutInitWindowSize
	mov rax, [WIN_WIDTH]
	mov rdi, rax
	mov rax, [WIN_HEIGHT]
	mov rsi, rax
	sub rsp, 16
	mov rax, 0
	call glutInitWindowSize
	add rsp, 16
	; ------ funccall end -> glutInitWindowSize
	; ------ funccall -> glutCreateWindow
	mov rax, [WIN_TITLE]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutCreateWindow
	add rsp, 16
	; ------ funccall end -> glutCreateWindow
	; ------ funccall -> init
	sub rsp, 16
	mov rax, 0
	call init
	add rsp, 16
	; ------ funccall end -> init
	; ------ funccall -> glutDisplayFunc
	lea rax, [on_display]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutDisplayFunc
	add rsp, 16
	; ------ funccall end -> glutDisplayFunc
	; ------ funccall -> glutReshapeFunc
	lea rax, [on_reshape]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutReshapeFunc
	add rsp, 16
	; ------ funccall end -> glutReshapeFunc
	; ------ funccall -> glutTimerFunc
	mov rax, 0
	mov rdi, rax
	lea rax, [on_timer]
	mov rsi, rax
	mov rax, 0
	mov rdx, rax
	sub rsp, 16
	mov rax, 0
	call glutTimerFunc
	add rsp, 16
	; ------ funccall end -> glutTimerFunc
	; ------ funccall -> glutPassiveMotionFunc
	lea rax, [on_passive_motion]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutPassiveMotionFunc
	add rsp, 16
	; ------ funccall end -> glutPassiveMotionFunc
	; ------ funccall -> glutKeyboardFunc
	lea rax, [on_keyboard_down]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutKeyboardFunc
	add rsp, 16
	; ------ funccall end -> glutKeyboardFunc
	; ------ funccall -> glutKeyboardUpFunc
	lea rax, [on_keyboard_up]
	mov rdi, rax
	sub rsp, 16
	mov rax, 0
	call glutKeyboardUpFunc
	add rsp, 16
	; ------ funccall end -> glutKeyboardUpFunc
	; ------ funccall -> glutMainLoop
	sub rsp, 16
	mov rax, 0
	call glutMainLoop
	add rsp, 16
	; ------ funccall end -> glutMainLoop
	xor rax, rax
	mov rsp, rbp
	pop rbp
	ret
segment .bss
	WIN_WIDTH resb 8
	WIN_HEIGHT resb 8
	WIN_TITLE resb 8
	FPS resb 8
	TO_RADIANS resb 8
	pitch resb 8
	yaw resb 8
	cam_x resb 8
	cam_z resb 8
	MOVE_FORWARD resb 8
	MOVE_BACKWARD resb 8
	MOVE_LEFT resb 8
	MOVE_RIGHT resb 8
	GLUT_CURSOR_NONE resb 8
	GL_DEPTH_TEST resb 8
	GL_LEQUAL resb 8
	GL_MODELVIEW resb 8
	GL_PROJECTION resb 8
	CLEAR_MODE resb 8
	DISPLAY_MODE resb 8
	_x resb 8
	z resb 8
	_z resb 8
segment .data
	buffer_zcbmB dq 0
	str_06QaRXjnVJ db `Some 3D simulation with malanka language.`,0